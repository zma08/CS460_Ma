@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Adventure14.Models.Product>

@{
    ViewBag.Title = "ProductItem";
}
<head>
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css"/>
    <link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css"/>
</head>
<h2>ProductItem</h2>
<div class="container">@Html.ActionLink("Back to Home", "Index")</div>

<table class="table">
    <tr>

            <th>
                Picture
            </th>

           

            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Color)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ListPrice)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Style)
            </th>*@
        </tr>

    @foreach (var item in Model)
    {

        <tr>

            <td>
            @{
                var str = Convert.ToBase64String(item.ProductProductPhotoes.SingleOrDefault().ProductPhoto.ThumbNailPhoto);
                var imgsrc = string.Format("data:img/gif; base64,{0}", str);
            }


            <a href="@Url.Action("ProductDetail","Product",new {id = item.ProductID, Mid = item.ProductModelID,})">
                <img src="@Url.Content(@imgsrc)" />
            </a>
            @*<td>
                @Html.DisplayFor(modelItem => item.ProductSubcategory.Name)
            </td>*@

            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>


            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>



            <td>
                @Html.DisplayFor(modelItem => item.ListPrice)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Size)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Weight)
            </td>


            <td>
                @Html.DisplayFor(modelItem => item.Style)
            </td>*@



        </tr>

    }

</table>

@Html.PagedListPager(Model, page=>Url.Action("ProductItem", new {page}))
